{"version":3,"sources":["components/GoodsList/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","hidden","reverse","sortBy","goodsSelector","hideButton","setState","reverseGoods","resetGoods","goods","this","props","modifiedGoods","filter","good","length","SORT_CASES","sort","goodA","goodB","localeCompare","type","className","onClick","map","key","onChange","target","value","Array","fill","x","i","Math","random","Component","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"0PAIaA,G,MAAb,4MACEC,MAAO,CACLC,QAAQ,EACRC,SAAS,EACTC,OAAQ,GACRC,cAAe,GALnB,EAQEC,WAAa,WACX,EAAKC,SAAS,CACZL,QAAQ,KAVd,EAcEM,aAAe,WACb,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBE,SAAUF,EAAME,aAhBtB,EAoBEM,WAAa,WACX,EAAKF,SAAS,CACZJ,SAAS,EACTC,OAAQ,GACRC,cAAe,KAxBrB,4CA4BE,WAAU,IAAD,OACCK,EAAUC,KAAKC,MAAfF,MACR,EAAmDC,KAAKV,MAAhDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,cAC3BQ,EAAgBH,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUX,KACpDY,EACM,WADNA,EAEI,SAoBV,OAjBAJ,EAAcK,MAAK,SAACC,EAAOC,GACzB,OAAQhB,GACN,IAAK,WACH,OAAOe,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMH,OAASI,EAAMJ,OAE9B,QACE,OAAO,MAITb,GACFU,EAAcV,UAId,oCACGD,GACD,4BACEoB,KAAK,SACLC,UAAU,2BACVC,QAASb,KAAKL,YAHhB,UASEJ,GACA,yBAAKqB,UAAU,aACb,4BACGV,EAAcY,KAAI,SAAAV,GAAI,OACrB,wBAAIW,IAAKX,GACNA,OAIP,4BACEO,KAAK,SACLC,UAAU,2BACVC,QAASb,KAAKH,cAHhB,WAOA,4BACEc,KAAK,SACLC,UAAU,2BACVC,QAAS,WACP,EAAKjB,SAAS,CACZH,OAAQa,MALd,uBAWA,4BACEK,KAAK,SACLC,UAAU,2BACVC,QAAS,WACP,EAAKjB,SAAS,CACZH,OAAQa,MALd,kBAWA,4BACEK,KAAK,SACLC,UAAU,2BACVC,QAASb,KAAKF,YAHhB,SAOA,4BACEc,UAAU,2BACVI,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX,EAAKrB,SAAS,CACZF,cAAeuB,EAAOC,SAG1BA,MAAOxB,GAENyB,MAAM,IAAIC,KAAK,GAAGN,KAAI,SAACO,EAAGC,GAAJ,OACrB,4BAAQP,IAAKQ,KAAKC,UAAWF,EAAI,aAzHjD,GAA+BG,cCAzBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUaC,EAPH,kBACV,yBAAKf,UAAU,OACb,qCACA,kBAAC,EAAD,CAAWb,MAAO2B,MChBtBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d3628eb2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './GoodsList.css';\n\nexport class GoodsList extends Component {\n  state ={\n    hidden: true,\n    reverse: false,\n    sortBy: '',\n    goodsSelector: 1,\n  }\n\n  hideButton = () => {\n    this.setState({\n      hidden: false,\n    });\n  }\n\n  reverseGoods = () => {\n    this.setState(state => ({\n      reverse: !state.reverse,\n    }));\n  }\n\n  resetGoods = () => {\n    this.setState({\n      reverse: false,\n      sortBy: '',\n      goodsSelector: 1,\n    });\n  }\n\n  render() {\n    const { goods } = this.props;\n    const { hidden, reverse, sortBy, goodsSelector } = this.state;\n    const modifiedGoods = goods.filter(good => good.length >= goodsSelector);\n    const SORT_CASES = {\n      alphabet: 'alphabet',\n      length: 'length',\n    };\n\n    modifiedGoods.sort((goodA, goodB) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return goodA.localeCompare(goodB);\n\n        case 'length':\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (reverse) {\n      modifiedGoods.reverse();\n    }\n\n    return (\n      <>\n        {hidden && (\n        <button\n          type=\"button\"\n          className=\"GoodsList__modifieButton\"\n          onClick={this.hideButton}\n        >\n          Start\n        </button>\n        )\n        }\n        {!hidden && (\n          <div className=\"GoodsList\">\n            <ul>\n              {modifiedGoods.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n            <button\n              type=\"button\"\n              className=\"GoodsList__modifieButton\"\n              onClick={this.reverseGoods}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              className=\"GoodsList__modifieButton\"\n              onClick={() => {\n                this.setState({\n                  sortBy: SORT_CASES.alphabet,\n                });\n              }}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              className=\"GoodsList__modifieButton\"\n              onClick={() => {\n                this.setState({\n                  sortBy: SORT_CASES.length,\n                });\n              }}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              className=\"GoodsList__modifieButton\"\n              onClick={this.resetGoods}\n            >\n              Reset\n            </button>\n            <select\n              className=\"GoodsList__modifieButton\"\n              onChange={({ target }) => {\n                this.setState({\n                  goodsSelector: target.value,\n                });\n              }}\n              value={goodsSelector}\n            >\n              {Array(10).fill(0).map((x, i) => (\n                <option key={Math.random()}>{i + 1}</option>\n              ))}\n            </select>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>Goods</h1>\n    <GoodsList goods={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}